import time
start_time = time.time()

def fibonacci(n):
    f = [0] * (n + 2)
    f[0] = 0
    f[1] = 1

    for i in range(2, n + 1):
        f[i] = f[i - 1] + f[i - 2]

    return f[n]
print(fibonacci(8))
print("Process finished --- %s seconds ---" % (time.time() - start_time))

# def fibonacci(n):
#     if n <= 1:
#         return n

#     a, b = 0, 1
#     for _ in range(2, n + 1):
#         a, b = b, a + b

#     return b

# def fib(n):
#     a, b = 0, 1

#     if n == 0:
#         return a

#     for i in range(2, n + 1):
#         c = a + b
#         a = b
#         b = c

#     return b


# def fib(n):
#     f = [0] * (n + 1)

#     if n == 0:
#         return 0

#     if n == 1 or n == 2:
#         f[n] = 1
#         return f[n]

#     if f[n] != 0:
#         return f[n]

#     if n % 2 == 1:
#         k = (n + 1) // 2
#         f[n] = fib(k) * fib(k) + fib(k - 1) * fib(k - 1)
#     else:
#         k = n // 2
#         f[n] = (2 * fib(k - 1) + fib(k)) * fib(k)

#     return f[n]

# def fib(n):
#     phi = (1 + 5 ** 0.5) / 2
#     return int(round(phi ** n / 5 ** 0.5))